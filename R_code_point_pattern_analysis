#to load data covid <- read.table("covid_agg.csv", header=TRUE)
#but after help we loaded with covid <- read.table("covid_agg.csv", header=T)



#Point Pattern analysis  Friday Nov. 20th, issue with Covid file  after #ggplot(covid, aes(x = lon, y = lat)) + geom_point()
                                                                        #ggplot(covid, aes(x = lon, y = lat, size = cases)) + geom_point()
                                                                        

#changed the size of my dots to indicate cases, relative to size of dot, 20000-80000, looks nice
##install ggplot2, did earlier, call forward
library(ggplot2)
#make scatter plot
ggplot(covid, aes(x = lon, y = lat)) + geom_point()

#change the size of my dots (data)

#spatstat now

#Install spatstat, did it, something went well, then we write attach(covid)  #####go to line 17 and go from there for last part of Nov.20th lesson

#Populations spread, clumped etc. remember discussion on population
#copy in GIT up
#Now let's see the density of covid on planet

#> covid
head(covid)
summary(covid)

#let's make a planar point  pattern in spatstat

#ppp(() so we need lon x coor, y is lat, to call in , here we are making parameters and use c to make array in front of c(-180,180,-90,90)



covid_planar <- ppp(lon, lat,c(-180, 180), -90,90))

#Now we have longi, lat and ranges and how to know ranges
> # =attach(covid)  - must attach first
attach(covid)

# x,y, ranges    important remember this
names(covid)  
#yields  [1] "cat"     "country" "cases"   "lat"     "lon" 

The following objects are masked from covid (pos = 3):

    cases, cat, country, lat, lon

> covid_planar <- ppp(lon, lat, c(-180,180), c(-90,90))
> density_map <- density(covid_planar)   #very prettty
> plot(density_map)
> cl <- colorRampPalette(c('yellow','orange','red'))(100)
> cl <- colorRampPalette(c('yellow','orange','red'))(100) #
> plot(density_map, col = cl
+ )    # here see that I did not close the command with the ), just type it and it finishes and gives back the <#
> points(covid_planar)  #put dots in the colors

#density_map()  we are naming our map density_map with also the covid_planar we named with  attributes covid_planar <- ppp(lon, lat, c(-180,180), c(-90,90))
density_map <- density(covid_planar)
plot(density_map)        # I end here from Friday's lesson, made plot well, all good.  

#now use points with planar to see the points on map
density_map <-density(covid_planar)

#color, we can change 
cl <- colorRampPalette(c('yellow','orange','red'))(100) 

#then replot
plot(density_map, col=cl)

#points in plt again, always redo
points(covid_planar)  #can see these in R info to get all colors

#Putting the countries ontop of map
install.packages("rgdal")

#so this red plus means I did not finish the function and need to close it!

#his code tomorrow 
#Duccio called and fixed issue!  Finally I have data, from now on go to downloads and copy file into lab folder and no more extra copies anywhere
#dry my eyes and begin again...
covid <- read.table("covid_agg.csv", header=T)
> covid
head(covid)
summary(covid)

#Install rgdal for next time  - worked! good night.

#crashed and lost notes.....Lenovo!!!

#setwd
setwd("C:/lab/")
> covid <- read.table("covid_agg.csv", header=T)
> attach(covid)
> library(spatstat)
Loading required package: spatstat.data
Loading required package: nlme
Loading required package: rpart

spatstat 1.64-1       (nickname: ‘Help you I can, yes!’) 
For an introduction to spatstat, type ‘beginner’ 


Note: spatstat version 1.64-1 is out of date by more than 6 months; we recommend upgrading to the latest version.
> covid <- read.table("covid_agg.csv", header=T)
> attach(covid)
The following objects are masked from covid (pos = 7):

    cases, cat, country, lat, lon

> covid_planar <- ppp(lon, lat, c(-180,180), c(-90,90))
> density_map <- density(covid_planar)
> plot(density_map)
> points(covid_planar)

#rgdal
#try to download new filesss, copy into lab folder from downloads
library(spatstat)
library(rgdal)
plot(density_map, col=cl)
#download new files,  it worked this time
coastlines <- readOGR("ne_10m_coastline.shp")
#these are shape files, points stored as shp, shape file, all pts have a value in table
# also an shx which links each point to correct row in table, vector files
#vector set of coordinates here, so in vector file type we have points, and we connect and close we have
#geometric possibilties
#raster and vector type
#density map an image of pixels, rastor, pixel smallest unit in picture

#again from top

covid <- read.table("covid_agg.csv",head=T)

attach(covid)

covid_planar <- ppp(lon, lat, c(-180,180), c(-90,90))

> density_map <- density(covid_planar)
> plot(density_map)
> points(covid_planar)
> library(rgdal)

cl <- colorRampPalette(c("yellow","orange","red")) (100)

plot(density_map, col=cl)
#download new files,  it worked this time
#so we will read OGR, the coastline, build by readOGR("import", insert file name)and define name with <- we name it coastlines
#1   coastlines <- readOGR("ne_10m_coastline.shp")
#name       define  command ("file")

#now we replot with coastlines after redoing the density map above with plot(density_map, col=cl)
#so we plot coastlines, add lines on top of the density map
#his
plot(density_map, col=cl)
plot(coastlines, add=T)
points(covid_planar)
#mine
#coastlines <- readOGR("ne_10m_coastline.shp")
#OGR data source with driver: ESRI Shapefile 
#Source: "C:\lab\ne_10m_coastline.shp", layer: "ne_10m_coastline"
#with 4133 features
#It has 3 fields
#Integer64 fields read as strings:  scalerank 
#> plot(density_map, col=cl)
#Error in plot.im(density_map, col = cl) : object 'cl' not found
#> plot(coastlines, add=T)
#> points(covid_planar)

#all good worked well
#changed colors  
cl <- colorRampPalette(c('blue','yellow','orange','red','magenta'))(100) #
plot(density_map, col = cl)
#also we can change the shape of our dots, with pch=  #  points(covid_planar, pch = 19) and cex to change the size cex=0.5
plot(coastlines, add = TRUE)
# change this, yellow is bothersome here for me cl <- colorRampPalette(c('blue','yellow','orange','red','magenta'))(100)
#now how to export our map to be used in thesis etc. !!!!
#make a png folder png("figure1.png")  and dev.off()

#now we will interpolate the data, we will check number of cases for disease in each country
#head(covid)  no problem, so we will see mean value between two points,each time, like 10+20/2=15, 
#go to temp file in lab
#Interpolate  use marks- use the less than on the end to reflect back to waht we are marking
marks(covid_planar) <- cases  #now we use smooth which smoothes the data, 
cases_map <- Smooth(covid_planar)  #apply smooth to planar point and name it with arrow, cases_map
#all get area for the least squares, so don't worry, now we need to plot
#plot(coastlines, add=T)

marks(covid_planar) <- cases
cases_map <- Smooth(covid_planar)

plot(cases_map)
plot(cases_map, col=cl)
plot(coastlines, add=T)
points(covid_planar)
#problem, Duccio solved,called, had open a graphics interfact somewhere below from 197-209 solved issue, redid dev.off()
Error in dev.(on) : could not find function "dev."
> plot(cases_map, col = cl)
> points(covid_planar)
> plot(coastlines, add = T)
> plot(cases_map, col = cl)
> points(covid_planar)
> plot(coastlines, add = T)
> dev.off()
null device 
          1 
> plot(cases_map, col = cl)
> plot(coastlines, add = T)
> points(covid_planar)

#to save map  
png("figure1.png")
pdf("figure1.pdf")

pdf("figure1.pdf")   #note pdf e png are 0KB nothing created into lab, name yes, file stored 0KB

#we are at number 3 in lab plan and do 4,5 Friday

#November 27th, Friday

#From Virtuale
#leo <- read.table("dati_zabotti.csv", head=T, sep=",")

attach(leo)

leo_ppp <- ppp(x, y, c(2300000,2325000), c(5005000,5045000))

marks(leo_ppp) <- chlh
chlh_map <- Smooth(leo_ppp)
plot(chlh_map)

marks(leo_ppp) <- t
t_map <- Smooth(leo_ppp)
plot(t_map)
points(leo_ppp)

par(mfrow=c(1,2))
plot(chlh_map)
points(leo_ppp)

plot(t_map)
points(leo_ppp)  #End of code from Virtuale
#With Norma we are going to try to see two aspects with our data, interpolated and original
#Spoints <- st_as_sf(covid, coords = c("lon", "lat"))
marks(covid_planar) <- cases # interpolation
cases_map <- Smooth(covid_planar) # interpolation
cl <- colorRampPalette(c('lightpink2','lightsalmon','tomato1','red3','maroon'))(100)
density_map <- density(covid_planar)
plot(density_map)
plot(cases_map, col = cl)
plot(coastlines, add = T)
plot(Spoints, cex=Spoints$cases/10000, col = 'purple3', lwd = 3, add=T)
#Today open R and replot and try Norma code

#He puts a new paper, nice, "Anticipating.." nice color scale to show population and cell distortsion for error, larger cell more error
#will try to save map, very pretty, but problems
#to save map  
png("figure1.png")
pdf("figure1.pdf")

#today we plot cases
#Git up step by step
#1- point pattern file continue here point pattern analysis

#so many nodes and can save time by taking only certain nodes
### Plotting points with different size related to covid data together with the interpolation of where not measured data(average between 2 known values e continue
# cl <- colorRampPalette(c('lightpink2','lightsalmon','tomato1','red3','maroon'))(100)
> plot(cases_map, col = cl)
> plot(Spoints, cex=Spoints$cases/10000, col = 'purple3', lwd = 3, add=T)
#got his map with a variety of circles and pink shades 
#remember to plot the map first also follow the line instructions for the R, it can not skip commands and refer back to old ones

#ok so now he uses rgdal, library(rgdal)
coastlines <- readOGR("ne_
#put a smooter to the coastlines by resampling and check the fraction what you divide by, 10000 etc.
#down from there, in and in and in with averages to smaller and smaller areas within our true sampled data area.
#(bld map of density,shaded areas)

#Remember "this let's us exit R and grab files"
#setwd("~/lab")   #and recall libraries needed
library(spatstat)
library(rgdal)
#Now read table to start interpolation
covid <- read.table("covid_agg.csv", header=T)
head(covid)
attach(covid) #we must attach or we will need to restate everytime variables
covid_planar <- ppp(lon, lat, c(-180,180), c(-90,90))
marks(covid_planar)<-cases
cases_map<-Smooth(covid_planar)
Smooth(covid_planar)

#now we change color map as we like, Rpackage color names
#now we need to build point planar pattern
covid_planar <-ppp(lon, lat, c(-180,180) c(-90,90)
#this worked.  must have all dev.off() over and over until null
cl <- colorRampPalette(c('lightpink2','lightsalmon','tomato1','red3','maroon'))(100)
> plot(cases_map, col = cl)
> covid_planar <- ppp(lon, lat, c(-180,180), c(-90,90))
> density_map <- density(covid_planar)
> plot(density_map)
> plot(cases_map, col = cl)
# all good
#now install packages (sf)
Spoints <- st_as_sf(covid, coords = c("lon","lat"))
plot(Spoints, cex=Spoints$cases/10000, col = 'purple3', lwd = 3, add=T)
#discussion of the fraction for division
# cl <- colorRampPalette(c('lightpink2','lightsalmon','tomato1','red3','maroon'))(100)
plot(cases_map, col = cl)
plot(Spoints, cex=Spoints$cases/10000, col = 'purple3', lwd = 3, add=T)
######Warning message:
####In plot.sf(Spoints, cex = Spoints$cases/10000, col = "purple3",  :
 ### ignoring all but the first attribute
coastlines <- readOGR("ne_10m_coastline.shp")
plot(coastlines, add=T)

#have the map, very nice! fancy and posh

#try to save map, foresee problems
png("cases_map.png")
pdf("cases_map.pdf")

#will ask why I have 0kB in map in lab folder for map
####Weekend  class over today
####attach leo and open data
leo <- read.table("dati_zabotti.csv", header=T, sep=",")
head(leo)
library(spatstat)

#build the density map and the interpolation map, first the ppp, explain points to R
#so we start with the ppp, so attach data set 
attach(leo)

#how to build the ppp, the max and min x,y, so by summary we 
#so summary gives us the min and max of each variable table, x and y now we have the range

# we will extend these values a little

leo_ppp <- ppp(x, y, c(2300000,2325000), c(5005000,5045000))
plot(leo_ppp)
plot(density_map)
points(leo_ppp)

#map changes because the name needs to be unique and it went back to the original code, maybe open a new R working page each time

#save work space

#no single reference system and how samples can be more or less dense depending on habit, shallow water, etc.
#try to model my data with x,y, mabye the all set is the y and have x match y to get date, where x=y, here also x and y are just coordinates, 
not functions....
save.image("C:\\lab\\pointanalysis")

#redo with a new R window
##save.image("C:\\lab\\pointanalysis") 

December 11, 2020, Friday

#How to reload data saved   load("C:\\lab\\point_pattern_analysis.RData")
#Multivariate analysis, theory community is sets of individuals with 2 different species, and their interaction and living together

#So we collect data with xy axis of map and see 3 plots, sample species in each plot, 
#For me define an area for my partitioning, like Butterflys, for Francesco Guccinini, parnasius guccinni
#See notes on discussion, no code today  except #load("biomes_multivar.RData")and library(vegan)

# so for my data I can treat as biomes maybe, 6 Biomes (Congruence classes) with populations of various subsets, 3 species each or 4 and 
#do the multivariate analysis, or even just Non-primes and subs, or Prime sets as empty set, outside the parameters of Principle components,
#as Prin.Comp defined as large distribution of non-primes in one Superset Biome vs. another.  Is it random?  not really...from within the modulus.









