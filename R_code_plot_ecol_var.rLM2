# Exercise 2 November 6th Friday 2020 

# R code for plotting the relationship among ecological variables

# today we use a dataset from package table. Import from R and use it!
#R has default statistical tools, we can add code as well and build R package,cran.r-project.org rasterdiv. sp package, sp.pdf
#Install package, we go out of R and grab package and go back into R, ("in/out")

install.packages ("sp")
library(sp)

#we got this from directory data R called meuse with command data(name)

#look inside set
data(meuse)
meuse

#R is case sensitive, we need View cap letter! Gives us a table view of data

View(meuse)  #For Mac, use :https://www.xquartz.org

#to see first part of table, under head

head(meuse)
#we are seeing the x,y coordinate with various sets of data, cd,Pb, Zn concentrations
#Exercise
#mean of all of the variables - used last time - summary



# (11.7+8.6+6.5)/N  takes too long

#do summary function, powerful tool, medium and mean of data
summary(meuse)

#plot meuse, cad x, zinc y

#       x      y cadmium copper lead zinc  elev       dist   om ffreq soil lime
1 181072 333611    11.7     85  299 1022 7.909 0.00135803 13.6     1    1    1
2 181025 333558     8.6     81  277 1141 6.983 0.01222430 14.0     1    1    1
3 181165 333537     6.5     68  199  640 7.800 0.10302900 13.0     1    1    1
4 181298 333484     2.6     81  116  257 7.655 0.19009400  8.0     1    2    0
5 181307 333330     2.8     48  117  269 7.480 0.27709000  8.7     1    2    0
6 181390 333260     3.0     61  137  281 

# primates <- c(3,5,9,15,40)
> primates
[1]  3  5  9 15 40
> crabs <- c(100,70,30,10,5)
> crabs
[1] 100  70  30  10   5
> plot(primates, crabs)
#follow the example

cadmium <- c(11.7,8.6,6.5,2.6,2.8,3.0)
zinc <- c(1022,1141,640,257,269,281)
plot (cadmium,zinc)

#or short cut as he shows, 
plot(meuse$cadmium,meuse$zinc)
#this gave all the data, not just ones I listed

attach(meuse)
plot (cadmium,lead)
#doesn't work because I made the manual plot before with predetermined length values....
#so I will use Copper,lead, that are unlabled in length
#Scatterplot Matrices
pairs(meuse)
#worked but lost graphs when went small  duhh... just in reduced box
#pairing only the elements part of the dataset, for example make graph only with cadmium, copper, lead and zinc.
#redo function, lost graphs
#homework  - next time spatial R


#or attach function
attach(meuse)

#homework  tried..to no avail....wipe your tears and try again

meuse <-data.frame(cadmium,zinc)
#nothing happened
#class
class(meuse)
# from internet > names(meuse)
[1] "x" "y" "cadmium" "copper" "lead" "zinc" "elev"
[8] "dist" "om" "ffreq" "soil" "lime" "landuse" "dist.m"
> coordinates(meuse) = ~x+y
> class(meuse)   from internet stop#

#gstat not installed

# library(sp)
# data(meuse)
# class(meuse)

# names(meuse)   
# coordinates(meuse) = ~x+y
# class(meuse)
summary(meuse)
coordinates(meuse)[1:5,]
# bubble(meuse, "zinc",
+ + col=c("#00ff0088", "#00ff0088"), main = "zinc concentrations (ppm)")  error 
#will try bubble(cadmium,zinc)
#error Error in as(obj, "SpatialPointsDataFrame") : 
  no method or default for coercing “numeric” to “SpatialPointsDataFrame”
  
  #good night, try tomorrow...To dry one's eyes and laugh at a fall,
#  And, baffled, get up and begin again,—browning
#install.packages("sp")
library(sp)

data(meuse)

head(meuse)

# coordinates
coordinates(meuse) = ~x+y      # alt+126

plot(meuse)

spplot(meuse, "zinc")

# Exercise: plot the spatial amount of copper
spplot(meuse, "copper", main="Copper concentration")

bubble(meuse, "zinc")
bubble(meuse, "zinc", main="Zinc concentration")

# Exercise: bubble copper in red
bubble(meuse, "copper", main="Cppoer concentration", col="red")

#this gives me a red scatter type plot for copper, works
#new class - 11/9/2020
#recall with library(sp)
library(sp)
data(meuse)

paris(meuse)  #puts all variables together

#  x   O
#      Y where O represents how they are related
#dataframe, use head function simplest rdocumentation.org
#cadmium copper lead zinc  we wanted just the soil variables

#what are numbers of these variables we count from x, y, and laterally, 123456, so 3-6 for elements, python uses 0 as first
#soil therefore have column 3 - 6  [quadratic brackets to label portion of matrix data we want]. print options 3:6 and comma represents start
pairs(meuse[,3:6])  #for columns , for rows by default in dataframe or filter()

#use names of columns      
pairs( ~cadmium +copper+ lead+ zinc, data=meuse)    # ~ must use number pad with alt if I want to identify by name of column

#let's prettify the graph...good verb
#exercise, we can remove a column if we want, leave out the name, easy as opposed to [,3,5:6]
#Exercise, change column color
pairs( ~cadmium +copper+ lead+ zinc, data=meuse)
#?bubble(meuse, "copper", main="Cppoer concentration", col="red"  nope not this
Color in R stored in brackets
pairs( ~cadmium +copper+ lead+ zinc, data=meuse,col="red", pch=17,cex=3)
#use the par() function to change colors of single panels, not bubble
#pch changes shape used in graph
pch(, data=meuse)
#increase size of triangle  was cex  character bigger
cex=3
pairs( ~cadmium +copper+ lead+ zinc, data=meuse,col="red", pch=17,cex=3)
#called extrapolation data  #https://statis
#multivariate analysis in R  Spatial statistics: from thesis




 







